
name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  #schedule: -cron:'0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  testbench:
    #name: Build Rust Project
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-latest

    #strategy:
    #  matrix:
    #    toolchain:
    #      - stable
    #      - beta
    #      - nightly
    #
    #    build: [linux, macos, windows]
    #    include:
    #      - build: linux
    #        os: ubuntu-latest
    #        target: x86_64-unknown-linux-musl
    #      - build: macos
    #        os: macos-latest
    #        target: aarch64-apple-darwin
    #      - build: windows
    #        os: windows-latest
    #        target: x86_64-pc-windows-msvc
    #  fail-fast: false

    steps:
    - uses: actions/checkout@v3

    #- run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

    #- name: Install toolchain
    #  uses: actions-rs/toolchain@v1
    #  with:
    #    toolchain: nightly
    #    #toolchain: ${{ matrix.rust }}
    #    #$target: ${{ matrix.target }}
    #    #profile: minimal
    #    #override: true

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test -- --color always --nocapture

    - name: Benchmark
      run: cargo bench

  coverage:   # https://github.com/xd009642/tarpaulin
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate code coverage  # https://github.com/actions-rs/tarpaulin
        #cargo install tarpaulin
      run: |
        cargo tarpaulin --exclude-files 'inperse/src/*' --run-types 'Tests,Doctests' --timeout 120 --out Xml
      #uses: actions-rs/tarpaulin@v0.1    # XXX: no more working
      #with:
      #  #version: '0.20.1'
      #  #args: '-- --test-threads 1'
      #  run-types: 'Tests,Doctests'

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      #with:
      #  #token: ${{secrets.CODECOV_TOKEN}}  # not required for public repos
      #  fail_ci_if_error: true

    #- name: Archive code coverage results
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: code-coverage-report
    #    path: cobertura.xml

