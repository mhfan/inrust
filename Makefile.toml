
### https://github.com/sagiegurari/cargo-make

[config]
default_to_workspace = false

[env]
#CARGO_TERM_COLOR = "always"

[tasks.default]
alias = "test"

[tasks.coverage]
alias = "llvm-cov"

[tasks.test-doc]
command = "cargo"
args = [ "t", "--doc" ]

[tasks.run-sample]
command = "cargo"
args = [ "r", #"-F", "debug", #"num-rational,debug",
            "--", "-G", "-2", "1", "2", "3", "4",
]

[tasks.test]
command = "cargo"   # cargo test -- --nocapture && cargo bench
# cargo t --doc && cargo nextest r && cargo bench  #--no-capture
dependencies = [ "test-doc" ]
args = [ "nextest", "r", #"--no-capture",
         #"t", "--", "--nocapture",
]   # https://nexte.st/index.html

[tasks.fuzz]    # https://rust-fuzz.github.io/book/
cwd = "fuzz"
command = "cargo"   # cargo +nightly fuzz run calc24
toolchain = "nightly"
args = [ "fuzz", "run", "calc24" ]

[tasks.llvm-cov]    # https://doc.rust-lang.org/stable/rustc/instrument-coverage.html
command = "cargo"
toolchain = "nightly"
env = { CC  = "/opt/homebrew/opt/llvm/bin/clang", CXX = "/opt/homebrew/opt/llvm/bin/clang++" }
# cargo +nightly llvm-cov --include-ffi --doctests #--lcov --output-path lcov.info #nextest
# cargo tarpaulin --run-types 'Tests,Doctests' --out Lcov --exclude-files 'inperse/src/*'
args = [ "llvm-cov", "--include-ffi", "--doctests",
            "--lcov", "--output-path", "lcov.info", #"nextest",
]   # https://github.com/taiki-e/cargo-llvm-cov

[tasks.codecov]
#command = "codecov"
dependencies = [ "coverage" ]
env = { "CODECOV_TOKEN" = "ca307f14-d04b-4c00-8a75-8d6e81202e44" }
#args = [ "-t", "${CODECOV_TOKEN}", #"--url", "https://app.codecov.io/gh/mhfan/inrust"
#]

[tasks.bench-fg]    # https://github.com/flamegraph-rs/flamegraph
#command = "cargo"
#args = [ "flamegraph", "--bench", "calc24_bench" ]
script = [ "sudo cargo flamegraph --bench calc24_bench" ]

[tasks.bench-mem]
command = "cargo"   # cargo bench -F dhat-heap
args = [ "bench", "-F", "dhat-heap", ]

[tasks.bench-num]
command = "cargo"   # cargo bench -F num-rational
args = [ "bench", "-F", "num-rational", ]

[tasks.bench-pprof]
command = "cargo"   # cargo bench -F pprof
args = [ "bench", "-F", "pprof", ]

[tasks.publish]
#command = "cargo"
#dependencies = [ "package" ]
env = { "CARGO_MAKE_CARGO_PUBLISH_FLAGS" = "--registry crates-io" }
#args = [ "publish", "--registry", "crates-io" ]

[tasks.indiox]
cwd = "indiox"
#command = "dioxus"  # web
#args = [ "serve" ]
command = "cargo"   # for desktop
args = [ "r" ]

[tasks.inperse]
cwd = "inperse"
command = "perseus"
args = [ "serve" ]

[tasks.inyew]
cwd = "inyew"
command = "trunk"
args = [ "serve" ]

# cargo modules generate tree --package inrust --lib --with-types --with-tests

