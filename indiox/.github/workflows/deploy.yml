
# https://github.com/actions/deploy-pages
# https://github.com/actions/upload-pages-artifact
name: Publish/Deploy

on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #- run: rustup update
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: swatinem/rust-cache@v2
      #- uses: actions/cache@v4
      #  with:
      #    path: |
      #      ~/.cargo/bin/
      #      ~/.cargo/registry/index/
      #      ~/.cargo/registry/cache/
      #      ~/.cargo/git/db/
      #      target/
      #      ~/.npm
      #    key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Dioxus and TailwindCSS
        run: |
            cargo install dioxus-cli
            npm -g install -D tailwindcss
            npm install tw-elements

      - name: Build Project
        run: | #cargo r --bin syncd -F syncdep
            npx tailwindcss -m -i tailwind_base.css -o assets/tailwind.css
            dx build --release
            #cargo t

      #- name: Setup GitHub Pages
      #  uses: actions/configure-pages@v4
      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    #if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build

    permissions:  # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

