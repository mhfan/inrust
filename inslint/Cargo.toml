
[package]
name = "inslint"
#build = "build.rs"
version = "0.1.0"
edition = "2021"
#resolver = "2"

license = "MIT OR Apache-2.0"
description = "First Slint Trial"
#repository = "https://github.com/mhfan/inslint"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
slint = "0.2"

[build-dependencies]
slint-build = "0.2"

# python3 -m http.server
# wasm-pack build --release --target web
[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = { version = "0.2" }

# https://github.com/rustwasm/wasm-pack-template

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
#console_error_panic_hook = { version = "0.1.*", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
#wee_alloc = { version = "0.4.*", optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

#[lib]   # XXX: for wasm-pack
#crate-type = ["cdylib"]
#path = "src/main.rs"

[workspace]

